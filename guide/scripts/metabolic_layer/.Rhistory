pluck(df, 'metabolites' , 1)
# rectangling the base tables
metabolite<-pluck(df, 'metabolites') |>
enframe() |>
select(value) |>
unnest_wider(value) |>
select(id, name, charge, compartment)
View(metabolite)
View(df)
genes<-pluck(df, 'genes') |>
enframe() |>
select(value) |>
unnest_wider(value)|>
as.data.frame() |> drop_na() |>
unnest_wider(notes) |>
unnest_wider(original_bigg_ids)
View(genes)
genes_filtered<-genes |>
dplyr::select(-Sequence,-Serogroup) |>
dplyr::filter(name != 'None')|>
rename('LT' = '...1')
reactions<-pluck(df, 'reactions') |>
enframe() |>
select(value) |>
unnest_wider(value) |>
unnest_wider(notes)
View(reactions)
reaction_metabolite_distribution <- reactions |>
unnest_longer(metabolites) |>
group_by(metabolites_id) |> tally()
View(reaction_metabolite_distribution)
# get promiscuous metabolites occuring in more than 10 reactions
# 92 in total
banned_metabolites<- reaction_metabolite_distribution |>
dplyr::filter(n > 10) |>
pull(metabolites_id)
# shape longer by metabolites
react_longer<-reactions |>
unnest_longer(metabolites)
View(react_longer)
# get reaction id to reaction rule
id2grr<-react_longer |>
dplyr::select(id, gene_reaction_rule) |>  dplyr::filter(gene_reaction_rule != '') |>
unique()
View(react_longer)
# simple cases, no or/and
id2grr_simple<-id2grr |>
dplyr::filter(!grepl('or|and', gene_reaction_rule))
View(id2grr_simple)
View(id2grr)
reversible<-react_longer |>
dplyr::filter(lower_bound == -1000 & upper_bound == 1000) |>
dplyr::filter(gene_reaction_rule != '') |>
dplyr::select("id","metabolites","metabolites_id" ) |>
dplyr::filter(!metabolites_id %in% banned_metabolites)
irreversible<-react_longer |>
dplyr::filter(!lower_bound == -1000 & upper_bound == 1000) |>
dplyr::filter(gene_reaction_rule != '') |>
dplyr::select("id","metabolites","metabolites_id" ) |>
dplyr::filter(!metabolites_id %in% banned_metabolites)
View(reversible)
#connect irreversible
source_reactions<-irreversible |>
dplyr::filter(metabolites == 1)
sink_reactions<-irreversible |>
dplyr::filter(metabolites == -1)
# join reactions
# reaction to reaction
source_to_sink<- source_reactions |>
full_join(sink_reactions, by='metabolites_id', suffix=c('_source','_sink')) |>
dplyr::select(id_source, metabolites_id, id_sink) |>
left_join(id2grr, by=c('id_source'='id'))|>
left_join(id2grr, by=c('id_sink'='id'), suffix=c('_source','_sink'))
View(source_to_sink)
#separate simple and complex cases
#
simple_case<-source_to_sink |>
dplyr::filter(!grepl('or|and', gene_reaction_rule_source)) |>
dplyr::filter(!grepl('or|and', gene_reaction_rule_sink)) |>
left_join(genes_filtered, by=c('gene_reaction_rule_source'='id'))|>
left_join(genes_filtered, by=c('gene_reaction_rule_sink'='id'), suffix=c('_source','_sink')) |>
dplyr::select(LT_source,LT_sink)|> drop_na() |> unique()
View(simple_case)
View(source_to_sink)
View(reactions)
View(source_reactions)
View(reactions)
View(react_longer)
View(genes)
View(df)
View(reactions)
irreversible<-react_longer |>
dplyr::filter(!lower_bound == -1000 & upper_bound == 1000) |>
dplyr::filter(gene_reaction_rule != '') |>
dplyr::select("id","metabolites","metabolites_id", "gene_reaction_rule") |>
dplyr::filter(!metabolites_id %in% banned_metabolites)
#connect irreversible
source_reactions<-irreversible |>
dplyr::filter(metabolites == 1)
sink_reactions<-irreversible |>
dplyr::filter(metabolites == -1)
# join reactions
# reaction to reaction
source_to_sink<- source_reactions |>
full_join(sink_reactions, by='metabolites_id', suffix=c('_source','_sink')) |>
dplyr::select(id_source, metabolites_id, id_sink) |>
left_join(id2grr, by=c('id_source'='id'))|>
left_join(id2grr, by=c('id_sink'='id'), suffix=c('_source','_sink'))
#connect irreversible
source_reactions<-irreversible |>
dplyr::filter(metabolites == 1)
sink_reactions<-irreversible |>
dplyr::filter(metabolites == -1)
source_to_sink<- source_reactions |>
full_join(sink_reactions, by='metabolites_id', suffix=c('_source','_sink'))
View(source_to_sink)
View(react_longer)
View(id2grr)
# join reactions
# reaction to reaction
source_to_sink<- source_reactions |>
full_join(sink_reactions, by='metabolites_id', suffix=c('_source','_sink'))
# join reactions
# reaction to reaction
source_to_sink<- source_reactions |>
full_join(sink_reactions, by='metabolites_id', suffix=c('_source','_sink'))
View(source_to_sink)
View(id2grr)
View(genes)
source_to_sink_separated<-source_to_sink |>
separate_rows(., gene_reaction_rule_source, gene_reaction_rule_sink, sep=' or ') |>
separate_rows(., gene_reaction_rule_source, gene_reaction_rule_sink, sep=' and ')
source_to_sink_separated<-source_to_sink |>
separate_rows(gene_reaction_rule_source, gene_reaction_rule_sink, sep=' or ') |>
separate_rows(gene_reaction_rule_source, gene_reaction_rule_sink, sep=' and ')
source_to_sink_separated<-source_to_sink |>
separate_rows(gene_reaction_rule_source, gene_reaction_rule_sink, sep=' or ')
source_to_sink_separated<-  separate_rows(source_to_sink,gene_reaction_rule_source, gene_reaction_rule_sink, sep=' or ')
rlang::last_error()
# join reactions
# reaction to reaction
source_to_sink<- source_reactions |>
full_join(sink_reactions, by='metabolites_id', suffix=c('_source','_sink')) |>
drop_na(gene_reaction_rule_source, gene_reaction_rule_sink)
source_to_sink<- source_reactions |>
full_join(sink_reactions, by='metabolites_id', suffix=c('_source','_sink'))
View(source_to_sink)
# join reactions
# reaction to reaction
source_to_sink<- source_reactions |>
full_join(sink_reactions, by='metabolites_id', suffix=c('_source','_sink')) |>
drop_na(gene_reaction_rule_source)
# join reactions
# reaction to reaction
source_to_sink<- source_reactions |>
full_join(sink_reactions, by='metabolites_id', suffix=c('_source','_sink')) |>
drop_na(gene_reaction_rule_source) |> drop_na(gene_reaction_rule_sink)
View(source_to_sink)
source_to_sink_separated<-  separate_rows(source_to_sink,gene_reaction_rule_source, gene_reaction_rule_sink, sep=' or ')
source_to_sink_separated<-  separate_rows(source_to_sink,gene_reaction_rule_source, gene_reaction_rule_sink, sep=' and ')
source_to_sink_separated<-  separate_rows(source_to_sink,gene_reaction_rule_source, gene_reaction_rule_sink, sep='and')
source_to_sink_separated<-  separate_rows(source_to_sink,gene_reaction_rule_source, sep='and')
View(source_to_sink_separated)
source_to_sink_separated<-  separate_rows(source_to_sink,gene_reaction_rule_source, sep=' and ')
source_to_sink_separated<-separate_rows(source_to_sink,gene_reaction_rule_source, sep=' and ') |>
separate_rows(source_to_sink,gene_reaction_rule_source, sep=' or ') |>
separate_rows(source_to_sink,gene_reaction_rule_sink, sep=' and ') |>
separate_rows(source_to_sink,gene_reaction_rule_sink, sep=' or ')
source_to_sink_separated<-separate_rows(source_to_sink,gene_reaction_rule_source, sep=' and ') |>
separate_rows(source_to_sink,gene_reaction_rule_source, sep=' or ') |>
source_to_sink_separated<-separate_rows(source_to_sink,gene_reaction_rule_source, sep=' and ') |>
separate_rows(source_to_sink,gene_reaction_rule_source, sep=' or ') |>
separate_rows(source_to_sink,gene_reaction_rule_sink, sep=' and ') |>
source_to_sink_separated<-separate_rows(source_to_sink,gene_reaction_rule_source, sep=' and ') |>
separate_rows(gene_reaction_rule_source, sep=' or ') |>
separate_rows(gene_reaction_rule_sink, sep=' and ') |>
separate_rows(gene_reaction_rule_sink, sep=' or ')
source_to_sink_separated<-separate_rows(source_to_sink,gene_reaction_rule_source, sep=' and ')
source_to_sink_separated<-separate_rows(source_to_sink,gene_reaction_rule_source, sep=' and ') |>
separate_rows(gene_reaction_rule_source, sep=' or ')
source_to_sink_separated<-separate_rows(source_to_sink,gene_reaction_rule_source, sep=' and ') |>
separate_rows(gene_reaction_rule_source, sep=' or ') |>
separate_rows(gene_reaction_rule_sink, sep=' and ')
source_to_sink_separated<-separate_rows(source_to_sink,gene_reaction_rule_source, sep=' and ') |>
separate_rows(gene_reaction_rule_source, sep=' or ') |>
separate_rows(gene_reaction_rule_sink, sep=' and ') |>
separate_rows(gene_reaction_rule_sink, sep=' or ')
View(source_to_sink_separated)
source_to_sink_separated<-separate_rows(source_to_sink,gene_reaction_rule_source, sep=' and ') |>
separate_rows(gene_reaction_rule_source, sep=' or ') |>
separate_rows(gene_reaction_rule_sink, sep=' and ') |>
separate_rows(gene_reaction_rule_sink, sep=' or ') |> unique()
View(id2grr)
View(genes)
View(genes)
s2s_locustag<- source_to_sink_separated |> left_join(genes, by = c('id'='gene_reaction_rule_source'))
s2s_locustag<- source_to_sink_separated |> left_join(genes, by = c('gene_reaction_rule_source'='id'))
View(s2s_locustag)
s2s_locustag<- source_to_sink_separated |> left_join(genes, by = c('gene_reaction_rule_source'='id')) |>
left_join(genes, by = c('gene_reaction_rule_sink'='id'))
View(genes_filtered)
View(genes)
s2s_locustag<- source_to_sink_separated |> left_join(genes_filtered, by = c('gene_reaction_rule_source'='id')) |>
left_join(genes_filtered, by = c('gene_reaction_rule_sink'='id'))
s2s_locustag<- source_to_sink_separated |> left_join(genes_filtered, by = c('gene_reaction_rule_source'='id')) |>
left_join(genes_filtered, by = c('gene_reaction_rule_sink'='id'),suffix=c('_source','_sink'))
stm1<-read_json('STM_v1_0.json')
View(stm1)
stm1genes<-pluck(stm1, 'genes') |>
enframe() |>
select(value) |>
unnest_wider(value)|>
as.data.frame() |> drop_na() |>
unnest_wider(notes) |>
unnest_wider(original_bigg_ids)
View(stm1genes)
View(stm1genes)
View(reactions)
stm1reactions<-pluck(stm1, 'reactions') |>
enframe() |>
select(value) |>
unnest_wider(value) |>
unnest_wider(notes)
View(stm1reactions)
stm1reactions2gene<-pluck(stm1, 'reactions') |>
enframe() |>
select(value) |>
unnest_wider(value) |>
unnest_wider(notes) |> dplyr::select(id, gene_reaction_rule)
stm1reactions2gene<-pluck(stm1, 'reactions') |>
enframe() |>
select(value) |>
unnest_wider(value) |>
unnest_wider(notes) |> dplyr::select(id, gene_reaction_rule) |> unique()
View(stm1reactions2gene)
stm1reactions2gene<-pluck(stm1, 'reactions') |>
enframe() |>
select(value) |>
unnest_wider(value) |>
unnest_wider(notes) |> dplyr::select(id, gene_reaction_rule) |> unique() |> drop_na()
View(source_to_sink_separated)
df<-read_json('STM_v1_0.json')
pluck(df, 'metabolites' , 1)
# rectangling the base tables
metabolite<-pluck(df, 'metabolites') |>
enframe() |>
select(value) |>
unnest_wider(value) |>
select(id, name, charge, compartment)
genes<-pluck(df, 'genes') |>
enframe() |>
select(value) |>
unnest_wider(value)|>
as.data.frame() |> drop_na() |>
unnest_wider(notes) |>
unnest_wider(original_bigg_ids)
genes_filtered<-genes |>
dplyr::select(-Sequence,-Serogroup) |>
dplyr::filter(name != 'None')|>
rename('LT' = '...1')
reactions<-pluck(df, 'reactions') |>
enframe() |>
select(value) |>
unnest_wider(value) |>
unnest_wider(notes)
# pick reactions table apart in multiple ways
# 1: count metabolites occurring in multiple reactions
reaction_metabolite_distribution <- reactions |>
unnest_longer(metabolites) |>
group_by(metabolites_id) |> tally()
# get promiscuous metabolites occuring in more than 10 reactions
# 92 in total
banned_metabolites<- reaction_metabolite_distribution |>
dplyr::filter(n > 10) |>
pull(metabolites_id)
# shape longer by metabolites
react_longer<-reactions |>
unnest_longer(metabolites)
# get reaction id to reaction rule
id2grr<-react_longer |>
dplyr::select(id, gene_reaction_rule) |>  dplyr::filter(gene_reaction_rule != '') |>
unique()
# simple cases, no or/and
id2grr_simple<-id2grr |>
dplyr::filter(!grepl('or|and', gene_reaction_rule))
reversible<-react_longer |>
dplyr::filter(lower_bound == -1000 & upper_bound == 1000) |>
dplyr::filter(gene_reaction_rule != '') |>
dplyr::select("id","metabolites","metabolites_id" ) |>
dplyr::filter(!metabolites_id %in% banned_metabolites)
irreversible<-react_longer |>
dplyr::filter(!lower_bound == -1000 & upper_bound == 1000) |>
dplyr::filter(gene_reaction_rule != '') |>
dplyr::select("id","metabolites","metabolites_id", "gene_reaction_rule") |>
dplyr::filter(!metabolites_id %in% banned_metabolites)
#connect irreversible
source_reactions<-irreversible |>
dplyr::filter(metabolites == 1)
sink_reactions<-irreversible |>
dplyr::filter(metabolites == -1)
# join reactions
# reaction to reaction
source_to_sink<- source_reactions |>
full_join(sink_reactions, by='metabolites_id', suffix=c('_source','_sink')) |>
drop_na(gene_reaction_rule_source) |> drop_na(gene_reaction_rule_sink)
source_to_sink_separated<-separate_rows(source_to_sink,gene_reaction_rule_source, sep=' and ') |>
separate_rows(gene_reaction_rule_source, sep=' or ') |>
separate_rows(gene_reaction_rule_sink, sep=' and ') |>
separate_rows(gene_reaction_rule_sink, sep=' or ') |> unique()
s2s_locustag<- source_to_sink_separated |> left_join(genes_filtered, by = c('gene_reaction_rule_source'='id')) |>
left_join(genes_filtered, by = c('gene_reaction_rule_sink'='id'),suffix=c('_source','_sink'))
#  separate_rows(gene_reaction_rule_source, gene_reaction_rule_sink, sep=' and ')
View(s2s_locustag)
s2s<-s2s_locustag |> dplyr::select(gene_reaction_rule_source,gene_reaction_rule_sink) |> unique()
View(s2s)
View(genes_filtered)
View(genes)
View(genes_filtered)
genes_filtered<-genes |>
dplyr::select(id, name) |> drop_na()
View(genes_filtered)
View(reversible)
s2s_irreversible<-s2s_locustag |> dplyr::select(gene_reaction_rule_source,gene_reaction_rule_sink) |> unique()
View(reversible)
View(irreversible)
#connect irreversible
source_reactions<-irreversible |>
dplyr::filter(metabolites >= 1)
sink_reactions<-irreversible |>
dplyr::filter(metabolites <= -1)
# join reactions
# reaction to reaction
source_to_sink<- source_reactions |>
full_join(sink_reactions, by='metabolites_id', suffix=c('_source','_sink')) |>
drop_na(gene_reaction_rule_source) |> drop_na(gene_reaction_rule_sink)
source_to_sink_separated<-separate_rows(source_to_sink,gene_reaction_rule_source, sep=' and ') |>
separate_rows(gene_reaction_rule_source, sep=' or ') |>
separate_rows(gene_reaction_rule_sink, sep=' and ') |>
separate_rows(gene_reaction_rule_sink, sep=' or ') |> unique()
s2s_locustag<- source_to_sink_separated |> left_join(genes, by = c('gene_reaction_rule_source'='id')) |>
left_join(genes, by = c('gene_reaction_rule_sink'='id'),suffix=c('_source','_sink'))
s2s_irreversible<-s2s_locustag |> dplyr::select(gene_reaction_rule_source,gene_reaction_rule_sink) |> unique()
# connect reversible
source_reactions_rev<-reversible |>
dplyr::filter(metabolites >= 1)
sink_reactions_rev<-irreversible |>
dplyr::filter(metabolites <= -1)
# join reactions
# reaction to reaction
source_to_sink_rev<- source_reactions_rev |>
full_join(sink_reactions_rev, by='metabolites_id', suffix=c('_source','_sink')) |>
drop_na(gene_reaction_rule_source) |> drop_na(gene_reaction_rule_sink)
# connect reversible
source_reactions_rev<-reversible |>
dplyr::filter(metabolites >= 1)
sink_reactions_rev<-irreversible |>
dplyr::filter(metabolites <= -1)
View(source_reactions_rev)
source_to_sink_rev<- source_reactions_rev |>
full_join(sink_reactions_rev, by='metabolites_id', suffix=c('_source','_sink'))
View(source_to_sink_rev)
View(sink_reactions)
View(sink_reactions_rev)
View(sink_reactions)
source_to_sink_rev<- source_reactions_rev |>
full_join(sink_reactions_rev, by='metabolites_id', suffix=c('_source','_sink'))
View(source_to_sink_rev)
View(source_to_sink)
source_to_sink<- source_reactions |>
full_join(sink_reactions, by='metabolites_id', suffix=c('_source','_sink'))
View(source_to_sink)
View(source_reactions)
View(source_reactions_rev)
View(reversible)
reversible<-react_longer |>
dplyr::filter(lower_bound == -1000 & upper_bound == 1000) |>
dplyr::filter(gene_reaction_rule != '') |>
dplyr::select("id","metabolites","metabolites_id" , "gene_reaction_rule") |>
dplyr::filter(!metabolites_id %in% banned_metabolites)
source_reactions_rev<-reversible |>
dplyr::filter(metabolites >= 1)
sink_reactions_rev<-irreversible |>
dplyr::filter(metabolites <= -1)
# join reactions
# reaction to reaction
source_to_sink_rev<- source_reactions_rev |>
full_join(sink_reactions_rev, by='metabolites_id', suffix=c('_source','_sink')) |>
drop_na(gene_reaction_rule_source) |> drop_na(gene_reaction_rule_sink)
View(source_to_sink_rev)
source_to_sink_separated_rev<-separate_rows(source_to_sink_rev,gene_reaction_rule_source, sep=' and ') |>
separate_rows(gene_reaction_rule_source, sep=' or ') |>
separate_rows(gene_reaction_rule_sink, sep=' and ') |>
separate_rows(gene_reaction_rule_sink, sep=' or ') |> unique()
s2s_locustag_rev<- source_to_sink_separated_rev |> left_join(genes, by = c('gene_reaction_rule_source'='id')) |>
left_join(genes, by = c('gene_reaction_rule_sink'='id'),suffix=c('_source','_sink'))
s2s_reversible<-s2s_locustag_rev |> dplyr::select(gene_reaction_rule_source,gene_reaction_rule_sink) |> unique()
View(s2s_reversible)
s2s_reversible<-s2s_locustag_rev |> dplyr::select(gene_reaction_rule_source,gene_reaction_rule_sink) |> str_remove_all('(') |> unique()
s2s_reversible<-s2s_locustag_rev |> dplyr::select(gene_reaction_rule_source,gene_reaction_rule_sink) |> str_remove_all('(')|> str_remove_all(')') |> unique()
View(s2s_reversible)
s2s_reversible %>%
mutate_all(funs(str_replace(., "(", "")))
s2s_reversible %>%
mutate_all(funs(str_replace(., "\(", "")))
s2s_reversible %>%
mutate_all(funs(str_replace(., "\\(", "")))
s2s_reversible<-s2s_locustag_rev |> dplyr::select(gene_reaction_rule_source,gene_reaction_rule_sink) |> mutate_all(funs(str_replace(., "\\(", ""))) |> mutate_all(funs(str_replace(., "\\)", ""))) |> unique()
s2s_irreversible<-s2s_locustag |> dplyr::select(gene_reaction_rule_source,gene_reaction_rule_sink) |> mutate_all(funs(str_replace(., "\\(", ""))) |> mutate_all(funs(str_replace(., "\\)", ""))) |> unique()
View(source_to_sink_separated)
source_to_sink_separated |> dplyr::filter(metabolites_id %in% banned_metabolites)
EE<- rbind(s2s_reversible, s2s_irreversible)
EE<- rbind(s2s_reversible, s2s_irreversible) |> unique()
View(EE)
write_csv('enzyme_enzyme_example.csv')
write_csv(EE,'enzyme_enzyme_example.csv')
# Generating enzyme - enzyme interactions from the STM 1.0 model
# Author: Marton Olbei
# The script takes a .json format metabolic model, and generates gene-gene interactions out of it, as laid out in the SalmoNet publications.
# The script is written in a verbose way on purpose, to make the individual steps easier to follow.
# To generate the metabolic layer for your own strain of interest, replace the JSON file, and run the steps below.
# The output will be mapped to STM1234 format locustags (S. Typhimurium LT2), you can use the orthology mapper script to
# format this to your liking.
# For any questions please contact me at m.olbei@imperial.ac.uk
library(tidyverse)
library(jsonlite)
setwd('~/OneDrive - Norwich BioScience Institutes/Documents/salmonet/webpage_tutorial/metabolism/')
df<-read_json('STM_v1_0.json')
pluck(df, 'metabolites' , 1)
# rectangling the base tables
metabolite<-pluck(df, 'metabolites') |>
enframe() |>
select(value) |>
unnest_wider(value) |>
select(id, name, charge, compartment)
genes<-pluck(df, 'genes') |>
enframe() |>
select(value) |>
unnest_wider(value)|>
as.data.frame() |> drop_na() |>
unnest_wider(notes) |>
unnest_wider(original_bigg_ids)
reactions<-pluck(df, 'reactions') |>
enframe() |>
select(value) |>
unnest_wider(value) |>
unnest_wider(notes)
# pick reactions table apart in multiple ways
# 1: count metabolites occurring in multiple reactions
reaction_metabolite_distribution <- reactions |>
unnest_longer(metabolites) |>
group_by(metabolites_id) |> tally()
# get promiscuous metabolites occurring in more than 10 reactions
banned_metabolites<- reaction_metabolite_distribution |>
dplyr::filter(n > 10) |>
pull(metabolites_id)
# shape longer by metabolites
react_longer<-reactions |>
unnest_longer(metabolites)
reversible<-react_longer |>
dplyr::filter(lower_bound == -1000 & upper_bound == 1000) |>
dplyr::filter(gene_reaction_rule != '') |>
dplyr::select("id","metabolites","metabolites_id" , "gene_reaction_rule") |>
dplyr::filter(!metabolites_id %in% banned_metabolites)
irreversible<-react_longer |>
dplyr::filter(!lower_bound == -1000 & upper_bound == 1000) |>
dplyr::filter(gene_reaction_rule != '') |>
dplyr::select("id","metabolites","metabolites_id", "gene_reaction_rule") |>
dplyr::filter(!metabolites_id %in% banned_metabolites)
#connect irreversible
source_reactions<-irreversible |>
dplyr::filter(metabolites >= 1)
sink_reactions<-irreversible |>
dplyr::filter(metabolites <= -1)
# join reactions
# reaction to reaction
source_to_sink<- source_reactions |>
full_join(sink_reactions, by='metabolites_id', suffix=c('_source','_sink')) |>
drop_na(gene_reaction_rule_source) |> drop_na(gene_reaction_rule_sink)
source_to_sink_separated<-separate_rows(source_to_sink,gene_reaction_rule_source, sep=' and ') |>
separate_rows(gene_reaction_rule_source, sep=' or ') |>
separate_rows(gene_reaction_rule_sink, sep=' and ') |>
separate_rows(gene_reaction_rule_sink, sep=' or ') |> unique()
s2s_locustag<- source_to_sink_separated |> left_join(genes, by = c('gene_reaction_rule_source'='id')) |>
left_join(genes, by = c('gene_reaction_rule_sink'='id'),suffix=c('_source','_sink'))
s2s_irreversible<-s2s_locustag |> dplyr::select(gene_reaction_rule_source,gene_reaction_rule_sink) |> mutate_all(funs(str_replace(., "\\(", ""))) |> mutate_all(funs(str_replace(., "\\)", ""))) |> unique()
# connect reversible
source_reactions_rev<-reversible |>
dplyr::filter(metabolites >= 1)
sink_reactions_rev<-irreversible |>
dplyr::filter(metabolites <= -1)
# join reactions
# reaction to reaction
source_to_sink_rev<- source_reactions_rev |>
full_join(sink_reactions_rev, by='metabolites_id', suffix=c('_source','_sink')) |>
drop_na(gene_reaction_rule_source) |> drop_na(gene_reaction_rule_sink)
source_to_sink_separated_rev<-separate_rows(source_to_sink_rev,gene_reaction_rule_source, sep=' and ') |>
separate_rows(gene_reaction_rule_source, sep=' or ') |>
separate_rows(gene_reaction_rule_sink, sep=' and ') |>
separate_rows(gene_reaction_rule_sink, sep=' or ') |> unique()
s2s_locustag_rev<- source_to_sink_separated_rev |> left_join(genes, by = c('gene_reaction_rule_source'='id')) |>
left_join(genes, by = c('gene_reaction_rule_sink'='id'),suffix=c('_source','_sink'))
s2s_reversible<-s2s_locustag_rev |> dplyr::select(gene_reaction_rule_source,gene_reaction_rule_sink) |> mutate_all(funs(str_replace(., "\\(", ""))) |> mutate_all(funs(str_replace(., "\\)", ""))) |> unique()
#enzyme-enzyme interactions
EE<- rbind(s2s_reversible, s2s_irreversible)
write_tsv(EE,'enzyme_enzyme_example.tsv')
View(EE)
#adding locustag prefix for ortholog mapping
EE$gene_reaction_rule_source <- paste0('locustag:',EE$gene_reaction_rule_source)
EE$gene_reaction_rule_sink <- paste0('locustag:',EE$gene_reaction_rule_sink)
write_tsv(EE,'enzyme_enzyme_example.tsv')
library(tidyverse)
write_tsv(EE,'enzyme_enzyme_example.tsv')
